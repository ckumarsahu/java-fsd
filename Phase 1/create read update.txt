import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.List;

public class FileOperationsExample {
    public static void main(String[] args) {
        // Define a file path
        Path filePath = Paths.get("example.txt");

        // Create a new file
        createFile(filePath);

        // Write some data to the file
        writeToFile(filePath, "Hello, this is a sample text.");

        // Read data from the file
        readFromFile(filePath);

        // Append more data to the file
        appendToFile(filePath, "\nThis is additional text.");

        // Read the updated data from the file
        readFromFile(filePath);

        // Delete the file
        deleteFile(filePath);
    }

    // Create a new file
    private static void createFile(Path filePath) {
        try {
            Files.createFile(filePath);
            System.out.println("File created: " + filePath);
        } catch (IOException e) {
            System.err.println("Error creating file: " + e.getMessage());
        }
    }

    // Write data to a file
    private static void writeToFile(Path filePath, String content) {
        try {
            Files.write(filePath, content.getBytes());
            System.out.println("Data written to file.");
        } catch (IOException e) {
            System.err.println("Error writing to file: " + e.getMessage());
        }
    }

    // Read data from a file
    private static void readFromFile(Path filePath) {
        try {
            List<String> lines = Files.readAllLines(filePath);
            System.out.println("Data read from file:");
            for (String line : lines) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.err.println("Error reading from file: " + e.getMessage());
        }
    }

    // Append data to a file
    private static void appendToFile(Path filePath, String content) {
        try {
            Files.write(filePath, content.getBytes(), StandardOpenOption.APPEND);
            System.out.println("Data appended to file.");
        } catch (IOException e) {
            System.err.println("Error appending to file: " + e.getMessage());
        }
    }

    // Delete a file
    private static void deleteFile(Path filePath) {
        try {
            Files.deleteIfExists(filePath);
            System.out.println("File deleted: " + filePath);
        } catch (IOException e) {
            System.err.println("Error deleting file: " + e.getMessage());
        }
    }
}
