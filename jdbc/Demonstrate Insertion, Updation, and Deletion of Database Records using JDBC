import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class CrudOperations {

    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/your_database";
    private static final String USER = "your_mysql_username";
    private static final String PASSWORD = "your_mysql_password";

    public static void main(String[] args) {
        Connection connection = null;

        try {
            // Connect to MySQL server
            connection = DriverManager.getConnection(JDBC_URL, USER, PASSWORD);

            // Insert a new record
            insertRecord(connection, "John Doe", "john@example.com");

            // Display records before update
            displayRecords(connection);

            // Update an existing record
            updateRecord(connection, 1, "John Updated", "john.updated@example.com");

            // Display records after update
            displayRecords(connection);

            // Delete a record
            deleteRecord(connection, 2);

            // Display records after deletion
            displayRecords(connection);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private static void insertRecord(Connection connection, String name, String email) throws SQLException {
        String insertQuery = "INSERT INTO users (name, email) VALUES (?, ?)";
        try (PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
            preparedStatement.setString(1, name);
            preparedStatement.setString(2, email);
            preparedStatement.executeUpdate();
            System.out.println("Record inserted successfully.");
        }
    }

    private static void updateRecord(Connection connection, int id, String newName, String newEmail) throws SQLException {
        String updateQuery = "UPDATE users SET name = ?, email = ? WHERE id = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
            preparedStatement.setString(1, newName);
            preparedStatement.setString(2, newEmail);
            preparedStatement.setInt(3, id);
            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Record updated successfully.");
            } else {
                System.out.println("Record not found for update.");
            }
        }
    }

    private static void deleteRecord(Connection connection, int id) throws SQLException {
        String deleteQuery = "DELETE FROM users WHERE id = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
            preparedStatement.setInt(1, id);
            int rowsDeleted = preparedStatement.executeUpdate();
            if (rowsDeleted > 0) {
                System.out.println("Record deleted successfully.");
            } else {
                System.out.println("Record not found for deletion.");
            }
        }
    }

    private static void displayRecords(Connection connection) throws SQLException {
        String selectQuery = "SELECT * FROM users";
        try (PreparedStatement preparedStatement = connection.prepareStatement(selectQuery);
             var resultSet = preparedStatement.executeQuery()) {

            System.out.println("Records in the users table:");
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String name = resultSet.getString("name");
                String email = resultSet.getString("email");

                System.out.println("ID: " + id + ", Name: " + name + ", Email: " + email);
            }
            System.out.println("-------------------------");
        }
    }
}
